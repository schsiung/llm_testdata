// Code generated by go-swagger; DO NOT EDIT.

// This file is part of MinIO Console Server
// Copyright (c) 2021 MinIO, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//

package user_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/minio/console/models"
)

const LoginNoContentCode int = 204
/*LoginNoContent A successful login.
// LoginNoContentCode is the HTTP code returned for type LoginNoContent
const LoginNoContentCode int = 204

*/
/*LoginNoContent A successful login.
type LoginNoContent struct {

swagger:response loginNoContent
// NewLoginNoContent creates LoginNoContent with default headers values

}
// WriteResponse to the client


}
type LoginNoContent struct {

/*LoginDefault Generic error response.
swagger:response loginDefault
type LoginDefault struct {

	  In: Body
	Payload *models.Error `json:"body,omitempty"`

func NewLoginDefault(code int) *LoginDefault {
		code = 500

		_statusCode: code,
}
// NewLoginNoContent creates LoginNoContent with default headers values
func NewLoginNoContent() *LoginNoContent {

func (o *LoginDefault) WithStatusCode(code int) *LoginDefault {
	return o

	return &LoginNoContent{}
// SetStatusCode sets the status to the login default response
func (o *LoginDefault) SetStatusCode(code int) {
	o._statusCode = code

func (o *LoginNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {
// WithPayload adds the payload to the login default response
	o.Payload = payload
}
// SetPayload sets the payload to the login default response
	o.Payload = payload

func (o *LoginDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {
	rw.WriteHeader(o._statusCode)
	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}